version: '3'

services:
  db:
    container_name: db_mysql
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: web_shop
      MYSQL_USER: user-1
      MYSQL_PASSWORD: user-1
    restart: always
    ports:
      - "5432:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks: 
      - admin_api
      - db
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      mongo:
        condition: service_started
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
    networks:
      - mongo-ex
      - mongo
  mongo:
    container_name: db_mongo
    image: mongo
    command: mongod --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: admin
    ports:
      - "27017:27017"
    volumes:
      - mongovolume:/data/db
    networks:
      - mongo-ex
      - mongo
      - catalog
  catalog_consumer:
    container_name: catalog_consumer
    restart: on-failure
    build:
      context: catalog_api/consumer
      dockerfile: Dockerfile
    links:
      - catalog_api
      - admin_api
    depends_on:
      - rabbit
    networks:
      - admin_api
      - consumer
      - catalog
      - rabbit
  rabbit:
    container_name: dev_rabbit
    hostname: rabbit
    image: rabbitmq:3.8.9-management
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=user
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5672" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - consumer
      - rabbit
  admin_api:
    container_name: admin_api
    build:
      context: ./admin_web
      dockerfile: Dockerfile
    ports:
      - 8010:5000
    volumes:
      - ./app:/app
    links:
      - db
    depends_on:
      - db
      - rabbit
    environment:
      APP_ID: 1
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: database
      MYSQL_USER: user-1
      MYSQL_PASSWORD: user-1
    networks: 
      - db
      - rabbit
      - admin_web
  admin_web:
    container_name: admin_web
    build: 
      context: ./admin_web_react
      dockerfile: Dockerfile
    ports: 
      - 8080:80
    networks: 
      - admin_web
      - admin_api
  catalog_api:
    container_name: catalog_api
    build:
      context: ./catalog_api/catalog_backend
      dockerfile: Dockerfile
    ports:
      - 8020:5010
    depends_on:
      - mongo
      - rabbit
    volumes:
      - ./app:/app
    networks:
      - consumer
      - catalog
      - mongo
volumes:
  db_data: { }
  mongovolume:
networks:
  admin_api:
  db:
  consumer:
  catalog:
  rabbit:
  mongo:
  mongo-ex:
  admin_web:
